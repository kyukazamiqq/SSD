# -*- coding: utf-8 -*-
"""Kelompok10_RC_Modul1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1MOT64AYDDxE4ngvU2BEx67Z-DvKuM5JU

Nawwaf Abdurrahman  
122450018  
Sains Data
"""

import numpy as np
import pandas as pd
import math #mathematical functions

import seaborn as sns
import matplotlib.pyplot as plt

from statistics import mode #just for mode
from scipy.special import binom #binomial distribution
from scipy.stats import iqr #only for interquartile range

dataset = pd.read_excel("/content/datasetbuset.xlsx")
dataset.head()

dataset.info()

"""# Ukuran Pemusatan Data"""

dataset.describe()

dataset['Pendapatan pemerintah'].mean()

dataset['Pendapatan pemerintah'].mode()

dataset['Pendapatan pemerintah'].median()

dataset['belanja pemerintah'].mean()

dataset['belanja pemerintah'].median()

dataset['belanja pemerintah'].mode()

"""# Ukuran Sebaran Data

### Range
"""

np.max(dataset['belanja pemerintah']) - np.min(dataset['belanja pemerintah'])

np.max(dataset['Pendapatan pemerintah']) - np.min(dataset['Pendapatan pemerintah'])

"""### Quartil"""

q1 = np.quantile(dataset['Pendapatan pemerintah'], .25)
print(f"Nilai Kuartil 1 Pendapatan Pemerintah : {q1}")

q3 = np.quantile(dataset['Pendapatan pemerintah'], .75)
print(f"Nilai Kuartil 3 Pendapatan Pemerintah : {q3}")

q2 = q3-q1
print(f"Nilai interquartile Pendapatan Pemerintah : {q2}")

q1_b = np.quantile(dataset['belanja pemerintah'], .25)
print(f"Nilai Kuartil 1 belanja Pemerintah : {q1_b}")

q3_b = np.quantile(dataset['belanja pemerintah'], .75)
print(f"Nilai Kuartil 3 belanja Pemerintah : {q3_b}")

q2_b = q3_b - q1_b
print(f"Nilai Interquartile belanja pemerintah : {q2_b} ")

"""### Variansi"""

variansi = np.var(dataset.loc[:,"Pendapatan pemerintah"], ddof = 1)
print(f"nilai variansi pendapatan: {variansi}")

variansi_b = np.var(dataset.loc[:,"belanja pemerintah"], ddof = 1)
print(f"nilai variansi belanja pemerintah: {variansi_b}")

"""### Standar Deviasi"""

sd_dataset = dataset.loc[:, "Pendapatan pemerintah"].std()
print("Standar Deviasi Pendapatan Pemerintah : ", sd_dataset)

sd1_dataset = dataset.loc[:, "belanja pemerintah"].std()
print(f"Standar Debiasi Belanja Pemerintah : {sd1_dataset}")

"""# Data Visualization

### Boxplot
"""

plt.boxplot(dataset["Pendapatan pemerintah"])

plt.boxplot(dataset["belanja pemerintah"])

fg, ax = plt.subplots(ncols = 2, figsize = (12,5))
ax[0].boxplot(dataset["Pendapatan pemerintah"])
ax[0].set_title("Boxplot Pendapatan Pemerintah")
ax[1].boxplot(dataset["belanja pemerintah"])
ax[1].set_title("Boxplot Belanja Pemerintah")

"""### Barplot

"""

# Plot
plt.figure(figsize=(10, 6))
plt.barh(daerah, pendapatan, color='skyblue')
plt.xlabel('Pendapatan Pemerintah')
plt.ylabel('Kabupaten/Kota')
plt.title('Pendapatan Pemerintah Kabupaten/Kota di Sumatera Selatan')
plt.gca().invert_yaxis()  # Invert y-axis to have the highest value at the top
plt.show()

plt.figure(figsize=(10, 6))
plt.barh(daerah, dataset["belanja pemerintah"], color='skyblue')
plt.xlabel('Belanja Pemerintah')
plt.ylabel('Kabupaten/Kota')
plt.title('Belanja Pemerintah Kabupaten/Kota di Sumatera Selatan')
plt.gca().invert_yaxis()  # Invert y-axis to have the highest value at the top
plt.show()

"""### Scatter Plot

"""

plt.scatter(x = "Pendapatan pemerintah", y= "belanja pemerintah", data = dataset)
plt.title("Pendapatan Pemerintah Dengan Belanja Pemerintah")
plt.xlabel('Pendapatan Pemerintah')
plt.ylabel('Belanja Pemerintah');

import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt

# Data
data = {
    "Pendapatan Pemerintah": [
        1385249743.61, 2117538251.60, 2427272283.31, 1733828909.87,
        1754874496.63, 3540653105.20, 2170118912.53, 1361538417.90,
        1997671003.34, 1345726222.01, 907787011.34, 984464703.01,
        798789807.82, 3487557657.72, 970605515.95, 841993231.51, 983971557.30
    ],
    "Belanja Pemerintah": [
        1490566527.35, 2398524591.87, 2019912535.87, 1821413388.17,
        1800644785.26, 2923048401.51, 2047785039.44, 1337273694.05,
        1900180287.90, 1350970193.38, 862668311.75, 880808605.35,
        917760731.11, 3220957279.64, 1053411752.10, 790690455.82, 974277297.73
    ]
}

# Buat DataFrame
df = pd.DataFrame(data)

# Hitung matriks korelasi
correlation_matrix = df.corr()

# Buat heatmap
plt.figure(figsize=(8, 6))
sns.heatmap(correlation_matrix, annot=True, cmap='coolwarm', fmt=".2f", linewidths=0.5)
plt.title('Heatmap Korelasi Pendapatan Pemerintah dan Belanja Pemerintah')
plt.show()